#!/bin/sh
# postinst script for nginx-opi
#
# see: dh_installdeb(1)

set -e

# summary of how this script can be called:
#        * <postinst> `configure' <most-recently-configured-version>
#        * <old-postinst> `abort-upgrade' <new version>
#        * <conflictor's-postinst> `abort-remove' `in-favour' <package>
#          <new-version>
#        * <postinst> `abort-remove'
#        * <deconfigured's-postinst> `abort-deconfigure' `in-favour'
#          <failed-install-package> <version> `removing'
#          <conflicting-package> <version>
# for details, see http://www.debian.org/doc/debian-policy/ or
# the debian-policy package


case "$1" in
    configure)

	if [ -e /etc/nginx/sites-enabled/default ]
	then
		rm /etc/nginx/sites-enabled/default
	fi

	if [ ! -e /etc/nginx/sites-enabled/opi ]
	then
		ln -s /etc/nginx/sites-available/opi /etc/nginx/sites-enabled/
	fi

	if [ ! -e /etc/ssl/certs/opi.pem ]
	then
		ln -s /usr/share/nginx-opi/opi-tmpcert.pem /etc/ssl/certs/opi.pem
	fi

	if [ ! -e /etc/ssl/private/opi.key ]
	then
		ln -s /usr/share/nginx-opi/opi-tmpkey.pem /etc/ssl/private/opi.key
	fi

	# Fix permissions
	chmod 0640 /usr/share/nginx-opi/opi-tmpkey.pem
	chown root:ssl-cert /usr/share/nginx-opi/opi-tmpkey.pem

	invoke-rc.d --quiet nginx restart
    ;;

    abort-upgrade|abort-remove|abort-deconfigure)
    ;;

    *)
        echo "postinst called with unknown argument \`$1'" >&2
        exit 1
    ;;
esac

# dh_installdeb will replace this with shell code automatically
# generated by other debhelper scripts.

#DEBHELPER#

exit 0
